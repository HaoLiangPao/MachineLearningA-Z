distance = read_csv("./gpa.csv")
library(tidyverse)
distance = read_csv("./gpa.csv")
distance = read_csv("./gpa.csv")
#Importing DataSet
dataset = read.csv("Position_Salaries.csv")
setwd("~/Desktop/机器学习Udemy/Machine Learning A-Z Chinese Template Folder/Part 2 - Regression/Section 6 - Polynomial Regression")
#Importing DataSet
dataset = read.csv("Position_Salaries.csv")
View(dataset)
dataset = dataset[1:]
dataset = dataset[:,2:3]
dataset = dataset[,2:3]
#Importing DataSet
dataset = read.csv("Position_Salaries.csv")
dataset = dataset[,2:3]
#Fitting Multiple Linear Regression to the Trainning Set
regressor = lm(formula = dataset$Salary,
data = dataset$Level)
# Fitting Linear Regression to the Trainning Set
Lin_reg = lm(formula = Salary ~ Level,
data = dataset)
View(Lin_reg)
summary(Lin_reg)
# Fitting Polynomial Regression to the Trainning Set
dataset$Level2 = dataset$Level^2
Lin_reg2 = lm(formula = Salary ~ Level2,
data = dataset)
summary(Lin_reg2)
dataset$Level2 = dataset$Level^2
dataset$Level3 = dataset$Level^3
Lin_reg2 = lm(formula = Salary ~ .,
data = dataset)
summary(Lin_reg2)
library("ggplot2", lib.loc="/Library/Frameworks/R.framework/Versions/3.5/Resources/library")
# Visualizing the Linear Regression results
ggplot() +
geom_point(aes(x = dataset$Level, y = dataset$Salary) +
color = "red") +
geom_line(aes(x = dataset$Level, y = predict(Lin_reg, newdata = dataset))+
color = "blue") +
xlab("Level") +
ylab("Salary")
# Visualizing the Linear Regression results
ggplot() +
geom_point(aes(x = dataset$Level, y = dataset$Salary) +
color = "red") +
geom_line(aes(x = dataset$Level, y = predict(Lin_reg, newdata = dataset))+
color = "blue") +
xlab('Level') +
ylab('Salary')
ggplot() +
geom_point(aes(x = dataset$Level, y = dataset$Salary) +
colour = "red") +
geom_line(aes(x = dataset$Level, y = predict(Lin_reg, newdata = dataset))+
colour = "blue") +
xlab('Level') +
ylab('Salary')
ggplot() +
geom_point(aes(x=dataset$Level, y=dataset$Salary) +
colour="red") +
geom_line(aes(x=dataset$Level, y=predict(Lin_reg, newdata=dataset))+
colour="blue") +
xlab('Level') +
ylab('Salary')
ggplot() +
geom_point(aes(x=dataset$Level, y=dataset$Salary) +
colour="red")
ggplot() +
geom_point(aes(x=dataset$Level, y=dataset$Salary) +
colour='red')
ggplot() +
geom_point(aes(x=dataset$Level, y=dataset$Salary),
colour='red') +
geom_line(aes(x=dataset$Level, y=predict(Lin_reg, newdata=dataset)),
colour="blue") +
xlab('Level') +
ylab('Salary')
ggplot() +
geom_point(aes(x = dataset$Level, y = dataset$Salary),
colour = 'red') +
geom_line(aes(x = dataset$Level, y = predict(Lin_reg2, newdata = dataset)),
colour = "blue") +
xlab('Level') +
ylab('Salary')
# Fitting Polynomial Regression to the Trainning Set
dataset$Level2 = dataset$Level^2
dataset$Level3 = dataset$Level^3
dataset$Level4 = dataset$Level^4
Lin_reg2 = lm(formula = Salary ~ .,
data = dataset)
# Visualizing the Polynomial Regression results
ggplot() +
geom_point(aes(x = dataset$Level, y = dataset$Salary),
colour = 'red') +
geom_line(aes(x = dataset$Level, y = predict(Lin_reg2, newdata = dataset)),
colour = "blue") +
xlab('Level') +
ylab('Salary')
# Predicting a new result with Polynomial Regression
Y_pred_Poly = predict(Lin_reg2, data.frame(Level = 6.5))
Y_pred_lin = predict(Lin_reg, data.frame(Level = 6.5))
Y_pred_lin = predict(Lin_reg, data.frame(level = 6.5))
Y_pred_lin = predict(Lin_reg, data.frame(6.5))
# Predicting a new result with Polynomial Regression
Y_pred_Poly = predict(Poly_reg, data.frame(Level = 6.5, Level2 = 6.5^2, Level3 = 6.5^3, Level4 = 6.5^4))
# Fitting Polynomial Regression to the Trainning Set
dataset$Level2 = dataset$Level^2
dataset$Level3 = dataset$Level^3
dataset$Level4 = dataset$Level^4
Poly_reg = lm(formula = Salary ~ .,
data = dataset)
# Predicting a new result with Polynomial Regression
Y_pred_Poly = predict(Poly_reg, data.frame(Level = 6.5, Level2 = 6.5^2, Level3 = 6.5^3, Level4 = 6.5^4))
