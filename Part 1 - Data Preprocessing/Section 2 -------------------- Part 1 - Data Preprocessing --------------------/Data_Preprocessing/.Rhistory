distance = read_csv("./gpa.csv")
library(tidyverse)
distance = read_csv("./gpa.csv")
distance = read_csv("./gpa.csv")
setwd("~/Desktop/机器学习Udemy/Machine Learning A-Z Chinese Template Folder/Part 1 - Data Preprocessing/Section 2 -------------------- Part 1 - Data Preprocessing --------------------/Data_Preprocessing")
#Data Processing
#Importing DataSet
dataset = read.csv("Data.csv")
dataset$Age[is.na(dataset$Age)] = mean(dataset$Age, na.rm = T)
View(dataset)
View(dataset)
dataset = read.csv("Data.csv")
dataset$Age
dataset$Age[is.na(dataset$Age)]
dataset = read.csv("Data.csv")
dataset$Age[is.na(dataset$Age)] = mean(dataset$Age, na.rm = T)
dataset = read.csv("Data.csv")
#Data Processing
#Importing DataSet
dataset = read.csv("Data.csv")
#Take care of missing data
tryout = dataset$Age
tryout1 = dataset$Age[is.na(dataset$Age)]
dataset$Age[is.na(dataset$Age)] = mean(dataset$Age, na.rm = T)
dataset$Salary[is.na(dataset$Salary)] = mean(dataset$Salary, na.rm = T)
#transform categorical data
dataset$Country = factor(dataset$Country,
levels = c("France", "Germany", "Spain"),
labels = c(1,2,3))
dataset$Country = factor(dataset$Purchased,
dataset$Country = factor(dataset$Purchased,
levels = c("Yes", "No"),
labels = c(0,1))
#Data Processing
#Importing DataSet
dataset = read.csv("Data.csv")
#Take care of missing data
tryout = dataset$Age
tryout1 = dataset$Age[is.na(dataset$Age)]
dataset$Age[is.na(dataset$Age)] = mean(dataset$Age, na.rm = T)
dataset$Salary[is.na(dataset$Salary)] = mean(dataset$Salary, na.rm = T)
#transform categorical data
dataset$Country = factor(dataset$Country,
levels = c("France", "Germany", "Spain"),
labels = c(1,2,3))
dataset$Country = factor(dataset$Purchased,
levels = c("Yes", "No"),
labels = c(0,1))
#Data Processing
#Importing DataSet
dataset = read.csv("Data.csv")
#Take care of missing data
tryout = dataset$Age
tryout1 = dataset$Age[is.na(dataset$Age)]
dataset$Age[is.na(dataset$Age)] = mean(dataset$Age, na.rm = T)
dataset$Salary[is.na(dataset$Salary)] = mean(dataset$Salary, na.rm = T)
#transform categorical data
dataset$Country = factor(dataset$Country,
levels = c("France", "Germany", "Spain"),
labels = c(1,2,3))
dataset$Purchased = factor(dataset$Purchased,
levels = c("Yes", "No"),
labels = c(0,1))
install.packages('caTools')
library("caTools", lib.loc="/Library/Frameworks/R.framework/Versions/3.5/Resources/library")
library(caTools)
detach("package:caTools", unload=TRUE)
library(caTools)
set.seed(123)
set.seed(321)
set.seed(123)
split = sample.split(0.8)
split = sample.split(0.8)
set.seed(123)
split = sample.split(dataset$Purchased, 0.8)
split
#Data Processing
#Importing DataSet
dataset = read.csv("Data.csv")
#Take care of missing data
tryout = dataset$Age
tryout1 = dataset$Age[is.na(dataset$Age)]
dataset$Age[is.na(dataset$Age)] = mean(dataset$Age, na.rm = T)
dataset$Salary[is.na(dataset$Salary)] = mean(dataset$Salary, na.rm = T)
#transform categorical data
dataset$Country = factor(dataset$Country,
levels = c("France", "Germany", "Spain"),
labels = c(1,2,3))
dataset$Purchased = factor(dataset$Purchased,
levels = c("Yes", "No"),
labels = c(0,1))
#splitting the dataset into training set and testing set
install.packages('caTools')
library(caTools)
#generate random number
set.seed(123)
split = sample.split(dataset$Purchased, 0.8)
training_set = subset(dataset, split == TRUE)
testing_set = subset(dataset, split == FALSE)
install.packages("caTools")
View(testing_set)
View(testing_set)
View(training_set)
set.seed(321)
#create split pattern based on random number generated
split2 = sample.split(dataset$Purchased, 0.8)
#subset the source dataset into actual training set and testing set
training_set2 = subset(dataset, split2 == TRUE)
testing_set2 = subset(dataset, split2 == FALSE)
#Feature Scaling
training_set[,2:3] = scale(training_set[,2:3])
testing_set[,2:3] = scale(testing_set[,2:3])
